<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="6dcec816-2d34-48d1-99ad-da45f952a22a" created="2.5.0" activeEnvironment="Default environment" name="SAF CountryInfo" resourceRoot="" updated="2.5.0" encryptionMode="Not encrypted" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">false</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="6dcec816-2d34-48d1-99ad-da45f952a22afileName">SAF-CountryInfo</con:setting>
  </con:settings>
  <con:vcsConfiguration>
    <con:vcsName>Git</con:vcsName>
    <con:repositoryIdentifier/>
  </con:vcsConfiguration>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="9c3d7a72-8a89-4e2f-b0a6-c943e6a788bd" name="QA VirtualService">
    <con:service type="SOAP" name="CountryInfoServiceSoapBinding12">
      <con:endpoint authProfile="No Authorization" wssType="" wssTimeToLive="" outgoingWss="" incomingWss="" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8090/</con:endpoint>
    </con:service>
    <con:service type="SOAP" name="CountryInfoServiceSoapBinding">
      <con:endpoint authProfile="No Authorization"/>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:environmentSpec>
    <con:entry environmentId="ed3ef71a-6da0-4bd5-acff-8a3c0646f1de">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="9c3d7a72-8a89-4e2f-b0a6-c943e6a788bd">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
</con:soapui-project>
